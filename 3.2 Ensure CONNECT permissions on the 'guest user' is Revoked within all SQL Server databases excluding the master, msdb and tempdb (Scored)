Rationale:

    A login assumes the identity of the guest user when a login has access to SQL Server but
    does not have access to a database through its own account and the database has a guest
    user account. Revoking the CONNECT permission for the guest user will ensure that a login is
    not able to access database information without explicit access to do so.

Audit:
    Run the following code snippet for each database (replacing <database_name> as
    appropriate) in the instance to determine if the guest user has CONNECT permission. No
    rows should be returned.
        USE [<database_name>];
        GO
        SELECT DB_NAME() AS DatabaseName, 'guest' AS Database_User,
        [permission_name], [state_desc]
        FROM sys.database_permissions
        WHERE [grantee_principal_id] = DATABASE_PRINCIPAL_ID('guest')
        AND [state_desc] LIKE 'GRANT%'
        AND [permission_name] = 'CONNECT'
        AND DB_NAME() NOT IN ('master','tempdb','msdb');

Remediation:
    The following code snippet revokes CONNECT permissions from the guest user in a
    database. Replace <database_name> as appropriate:
      USE [<database_name>];
      GO
      REVOKE CONNECT FROM guest;
      
Impact:

    When CONNECT permission to the guest user is revoked, a SQL Server instance login must
    be mapped to a database user explicitly in order to have access to the database.
Default Value:
    The guest user account is added to each new database but without CONNECT permission by
    default.
References:
1. https://docs.microsoft.com/en-us/sql/relational-databases/policy-basedmanagement/
guest-permissions-on-user-databases

Notes:
  The guest account cannot have the CONNECT permission revoked in master, msdb and
  tempdb, but this permission should be revoked in all other databases on the SQL Server
  instance.
